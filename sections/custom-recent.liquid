<section class="pro-checked">
  <div class="page-inner">
    <div class="page-contents">
      <div class="pro-checked__titleArea">
        <h2 class="pro-title">{{ section.settings.title }}</h2>
      </div>
      <ul id="recently-viewed-products" class="top-rec__items"></ul>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const container = document.getElementById('recently-viewed-products');
    const viewed = JSON.parse(localStorage.getItem('recently_viewed')) || [];

    if (viewed.length === 0 || !container) return;

    viewed.forEach(handle => {
      fetch(`/products/${handle}.js`)
        .then(res => res.json())
        .then(product => {
          // colorはmetafields内のcustom.colorを直接取得できないので一旦空文字で代用
          // もしLiquid側で色情報を渡せるならJSONに含めてください
          const color = '';

          const price = (product.variants[0].price / 100).toLocaleString();
          const compareAtPrice = product.variants[0].compare_at_price
            ? (product.variants[0].compare_at_price / 100).toLocaleString()
            : null;

          const item = document.createElement('li');
          item.className = 'top-rec__item';
          item.innerHTML = `
            <a href="${product.url}">
              <img src="${product.featured_image}" alt="${product.title}" class="top-rec__img">
              <div class="top-rec__textArea">
                <h3 class="product-name">${product.title}</h3>
                <div class="product-color">${color}</div>
                <div class="product-price">
                  <span class="product-emphasis">${price}円</span>（税込）
                </div>
                <div class="discount-tag"></div>
              </div>
            </a>
          `;
          container.appendChild(item);
        })
        .catch(error => {
          console.error('商品データの取得に失敗しました:', error);
        });
    });
  });
</script>


{% schema %}
{
  "name": "最近チェックした商品",
  "tag": "section",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "タイトル",
      "default": "最近チェックした商品"
    }
  ],
  "presets": [
    {
      "name": "最近チェックした商品"
    }
  ]
}
{% endschema %}
